# ref: https://github.com/linkedin/cruise-control/wiki/Configurations
anomaly.detection.goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuCapacityGoal
anomaly.notifier.class=com.linkedin.kafka.cruisecontrol.detector.notifier.SelfHealingNotifier
bootstrap.servers=<list-kafka-brokers>
broker.metric.sample.store.topic=__KafkaCruiseControlModelTrainingSamples
broker.metrics.window.ms=300000
capacity.config.file=config/capacity.json
client.id=kafka-cruise-control
cluster.configs.file=config/clusterConfigs.json
completed.cruise.control.admin.user.task.retention.time.ms=604800000
completed.cruise.control.monitor.user.task.retention.time.ms=86400000
completed.kafka.admin.user.task.retention.time.ms=604800000
completed.kafka.monitor.user.task.retention.time.ms=86400000
completed.user.task.retention.time.ms=86400000
connections.max.idle.ms=540000
cpu.balance.threshold=1.1
cpu.capacity.threshold=0.85
cpu.low.utilization.threshold=0.0
default.goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.PotentialNwOutGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.TopicReplicaDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderReplicaDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderBytesInDistributionGoal
demotion.history.retention.time.ms=1209600000
disk.balance.threshold=1.1
disk.capacity.threshold=0.85
disk.low.utilization.threshold=0.0
execution.progress.check.interval.ms=10000
failed.brokers.zk.path=/CruiseControlBrokerList
goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.PotentialNwOutGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.TopicReplicaDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderReplicaDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderBytesInDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.kafkaassigner.KafkaAssignerDiskUsageDistributionGoal,com.linkedin.kafka.cruisecontrol.analyzer.kafkaassigner.KafkaAssignerEvenRackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.PreferredLeaderElectionGoal
hard.goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuCapacityGoal
intra.broker.goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.IntraBrokerDiskCapacityGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.IntraBrokerDiskUsageDistributionGoal
logdir.response.timeout.ms=25000
max.active.user.tasks=5
max.cached.completed.cruise.control.admin.user.tasks=30
max.cached.completed.cruise.control.monitor.user.tasks=20
max.cached.completed.kafka.admin.user.tasks=30
max.cached.completed.kafka.monitor.user.tasks=20
max.cached.completed.user.tasks=25
max.num.cluster.partition.movements=1250
max.replicas.per.broker=10000
metadata.max.age.ms=120000
metric.anomaly.analyzer.metrics=BROKER_PRODUCE_LOCAL_TIME_MS_50TH,BROKER_PRODUCE_LOCAL_TIME_MS_999TH,BROKER_CONSUMER_FETCH_LOCAL_TIME_MS_50TH,BROKER_CONSUMER_FETCH_LOCAL_TIME_MS_999TH,BROKER_FOLLOWER_FETCH_LOCAL_TIME_MS_50TH,BROKER_FOLLOWER_FETCH_LOCAL_TIME_MS_999TH,BROKER_LOG_FLUSH_TIME_MS_50TH,BROKER_LOG_FLUSH_TIME_MS_999TH
metric.anomaly.finder.class=com.linkedin.kafka.cruisecontrol.detector.KafkaMetricAnomalyFinder
metric.anomaly.percentile.lower.threshold=10.0
metric.anomaly.percentile.upper.threshold=90.0
metric.reporter.topic=__CruiseControlMetrics
metric.sampler.class=com.linkedin.kafka.cruisecontrol.monitor.sampling.CruiseControlMetricsReporterSampler
metric.sampler.partition.assignor.class=com.linkedin.kafka.cruisecontrol.monitor.sampling.DefaultMetricSamplerPartitionAssignor
metric.sampling.interval.ms=120000
min.samples.per.broker.metrics.window=1
min.samples.per.partition.metrics.window=1
min.valid.partition.ratio=0.95
network.inbound.balance.threshold=1.1
network.inbound.capacity.threshold=0.8
network.inbound.low.utilization.threshold=0.0
network.outbound.balance.threshold=1.1
network.outbound.capacity.threshold=0.8
network.outbound.low.utilization.threshold=0.0
num.broker.metrics.windows=20
num.concurrent.intra.broker.partition.movements=2
num.concurrent.leader.movements=1000
num.concurrent.partition.movements.per.broker=10
num.metric.fetchers=1
num.partition.metrics.windows=5
num.proposal.precompute.threads=1
num.sample.loading.threads=8
partition.metric.sample.store.topic=__KafkaCruiseControlPartitionMetricSamples
partition.metrics.window.ms=300000
proposal.expiration.ms=60000
receive.buffer.bytes=131072
reconnect.backoff.ms=50
removal.history.retention.time.ms=1209600000
replica.count.balance.threshold=1.1
request.timeout.ms=30000
sample.store.class=com.linkedin.kafka.cruisecontrol.monitor.sampling.KafkaSampleStore
sample.store.topic.replication.factor=2
sampling.allow.cpu.capacity.estimation=true
self.healing.disk.failure.enabled=true
self.healing.enabled=true
self.healing.exclude.recently.demoted.brokers=true
self.healing.exclude.recently.removed.brokers=true
self.healing.goal.violation.enabled=true
self.healing.maintenance.event.enabled=true
self.healing.topic.anomaly.enabled=true
send.buffer.bytes=131072
topic.config.provider.class=com.linkedin.kafka.cruisecontrol.config.KafkaAdminTopicConfigProvider
two.step.purgatory.max.requests=25
two.step.purgatory.retention.time.ms=1209600000
two.step.verification.enabled=false
webserver.accesslog.enabled=true
webserver.accesslog.path=access.log
webserver.accesslog.retention.days=14
webserver.api.urlprefix=/kafkacruisecontrol/*
webserver.http.address=0.0.0.0
webserver.http.cors.allowmethods=OPTIONS,GET,POST
webserver.http.cors.enabled=false
webserver.http.cors.exposeheaders=Content-Type
webserver.http.cors.origin=http://localhost
webserver.http.port=9090
webserver.request.maxBlockTimeMs=10000
webserver.session.maxExpiryTimeMs=60000
webserver.session.path=/
webserver.ui.diskpath=./cruise-control-ui/dist/
webserver.ui.urlprefix=/*
zookeeper.connect=<list-zookeeper>
zookeeper.security.enabled=false
